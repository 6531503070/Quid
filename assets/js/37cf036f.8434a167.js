"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[41],{1010:e=>{e.exports=JSON.parse('{"functions":[{"name":"clock","desc":"A factory function for produce unix-timestamp in milliseconds as a integer.\\n:::tip\\nYou can `overwrite` this, and implement your own clock function.\\n:::","params":[],"returns":[{"desc":"A unix-timestamp in milliseconds as a integer.","lua_type":"number"}],"function_type":"static","source":{"line":70,"path":"src/init.luau"}},{"name":"entropy","desc":"A factory function for produce random number between [0, 1]\\n:::tip\\nYou can `overwrite` this, and implement your own entropy function.\\n:::","params":[{"name":"version","desc":"","lua_type":"number"},{"name":"timestamp","desc":"","lua_type":"number"},{"name":"fingerprint","desc":"","lua_type":"string"},{"name":"counter","desc":"","lua_type":"number"}],"returns":[{"desc":"A random number between [0, 1]","lua_type":"number"}],"function_type":"static","source":{"line":87,"path":"src/init.luau"}}],"properties":[{"name":"version","desc":":::tip\\nIt\'s can be used as a number for comparing version and then apply to item / entity schema or data-transformation.\\n:::","lua_type":"number","source":{"line":45,"path":"src/init.luau"}},{"name":"fingerprint","desc":":::tip\\nIt\'s can be represent as a `machine-id`, `place-id`, `job-id`, etc. for better randomness.\\nBut it depends on your entropy factory function too.\\n:::","lua_type":"string","source":{"line":54,"path":"src/init.luau"}},{"name":"_counter","desc":"","lua_type":"number","private":true,"source":{"line":59,"path":"src/init.luau"}}],"types":[],"name":"Config","desc":"A configuration object for quid generation","source":{"line":37,"path":"src/init.luau"}}')}}]);